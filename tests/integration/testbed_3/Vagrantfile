Vagrant.configure("2") do |config|
  # ssh configuration
  config.ssh.username = "vagrant"

  config.ssh.keep_alive = true

  # config.vm.box = "debian/bullseye64"
  config.vm.box = "debian_frr_linux_5.16"
  config.vm.provider "virtualbox" do |virtualbox|
    virtualbox.memory = "512"
    virtualbox.cpus = "1"
  end

  config.vm.provision "shell", inline: "apt-get install --yes python3-apt"
  config.vm.synced_folder "../../../src", "/home/vagrant/ti-mfa-src"

  # Network topology
  # see https://www.univie.ac.at/ct/stefan/gi18.pdf figure 1
  #
  #                                   Router 1
  #                                 10.200.200.1
  #                                   +-------+
  #                            [eth1] |   1   | [eth2]
  #      +----------------------------|   A   |----------------------------+
  #      |                            |       |                            |
  #      |                            +-------+                            |
  #    1 |                                                                 | 2
  #      |                                                                 |
  #      | [eth1]                                                   [eth1] |
  #  +-------+                                                         +-------+
  #  |   2   | [eth2]                     3                     [eth3] |   3   |
  #  |   B   |---------------------------------------------------------|   C   |
  #  |       |                                                         |       |
  #  +-------+                                                         +-------+
  #      | [eth3]                                                   [eth2] |
  #      |                                                                 |
  #    4 |                                                                 | 5
  #      |                                                                 |
  #      | [eth1]                                                   [eth2] |
  #  +-------+                                                         +-------+
  #  |   4   | [eth2]                     6                     [eth1] |   5   |
  #  |   D   |---------------------------------------------------------|   E   |
  #  |       |                                                         |       |
  #  +-------+                                                         +-------+
  #      | [eth3]                                                   [eth3] |
  #      |                                                                 |
  #    7 |                            +-------+                            | 8
  #      |                     [eth1] |   6   | [eth2]                     |
  #      +----------------------------|   Z   |----------------------------+
  #                                   |       |
  #                                   +-------+

  PRIVATE_NETWORK_PREFIX = "192.168"
  VM_NETWORK_CONFIG = {
    "A": {
      "ab": "1.11",
      "ac": "2.11",
    },
    "B": {
      "ab": "1.12",
      "bc": "3.12",
      "bd": "4.12",
    },
    "C": {
      "ac": "2.13",
      "bc": "3.13",
      "ce": "5.13",
    },
    "D": {
      "bd": "4.14",
      "de": "6.14",
      "dz": "7.14",
    },
    "E": {
      "ce": "5.15",
      "de": "6.15",
      "ez": "8.15",
    },
    "Z": {
      "dz": "7.16",
      "ez": "8.16",
    }
  }

  STATIC_ROUTES = {
    "A": [
      "10.200.200.2 via 192.168.1.12 dev eth1",
      "10.200.200.3 via 192.168.2.13 dev eth2",
      "10.200.200.4 encap mpls  17100 via 192.168.1.12 dev eth1",
      "10.200.200.5 encap mpls  17100 via 192.168.2.13 dev eth2",
      "192.168.3.0/24 nexthop via 192.168.1.12 dev eth1 weight 1 nexthop via 192.168.2.13 dev eth2 weight 1",
      "192.168.4.0/24 via 192.168.1.12 dev eth1",
      "192.168.5.0/24 via 192.168.2.13 dev eth2",
      "192.168.6.0/24 nexthop via 192.168.1.12 dev eth1 weight 1 nexthop via 192.168.2.13 dev eth2 weight 1",
      "192.168.7.0/24 via 192.168.1.12 dev eth1",
      "192.168.8.0/24 via 192.168.2.13 dev eth2"
    ],
    "B": [
      "10.200.200.1 via 192.168.1.11 dev eth1",
      "10.200.200.3 via 192.168.3.13 dev eth2",
      "10.200.200.4 via 192.168.4.14 dev eth3",
      "10.200.200.5 nexthop  encap mpls  17100 via 192.168.3.13 dev eth2 weight 1 nexthop  encap mpls  17100 via 192.168.4.14 dev eth3 weight 1",
      "192.168.2.0/24 via 192.168.3.13 dev eth2",
      "192.168.5.0/24 via 192.168.3.13 dev eth2",
      "192.168.6.0/24 via 192.168.4.14 dev eth3",
      "192.168.7.0/24 via 192.168.4.14 dev eth3",
      "192.168.8.0/24 nexthop via 192.168.3.13 dev eth2 weight 1 nexthop via 192.168.4.14 dev eth3 weight 1"
    ],
    "C":[
      "10.200.200.1 via 192.168.2.11 dev eth1",
      "10.200.200.2 via 192.168.3.12 dev eth2",
      "10.200.200.4 nexthop  encap mpls  17100 via 192.168.3.12 dev eth2 weight 1 nexthop  encap mpls  17100 via 192.168.5.15 dev eth3 weight 1",
      "10.200.200.5 via 192.168.5.15 dev eth3",
      "192.168.1.0/24 via 192.168.3.12 dev eth2",
      "192.168.4.0/24 via 192.168.3.12 dev eth2",
      "192.168.6.0/24 via 192.168.5.15 dev eth3",
      "192.168.7.0/24 nexthop via 192.168.3.12 dev eth2 weight 1 nexthop via 192.168.5.15 dev eth3 weight 1",
      "192.168.8.0/24 via 192.168.5.15 dev eth3"
    ],
    "D":[
      "10.200.200.1 encap mpls  17100 via 192.168.4.12 dev eth1",
      "10.200.200.2 via 192.168.4.12 dev eth1",
      "10.200.200.3 nexthop  encap mpls  17100 via 192.168.4.12 dev eth1 weight 1 nexthop  encap mpls  17100 via 192.168.6.15 dev eth2 weight 1",
      "10.200.200.5 via 192.168.6.15 dev eth2",
      "192.168.1.0/24 via 192.168.4.12 dev eth1",
      "192.168.2.0/24 nexthop via 192.168.4.12 dev eth1 weight 1 nexthop via 192.168.6.15 dev eth2 weight 1",
      "192.168.3.0/24 via 192.168.4.12 dev eth1",
      "192.168.5.0/24 via 192.168.6.15 dev eth2",
      "192.168.8.0/24 nexthop via 192.168.6.15 dev eth2 weight 1 nexthop via 192.168.7.16 dev eth3 weight 1"
    ],
    "E":[
      "10.200.200.1 encap mpls  17100 via 192.168.5.13 dev eth1 proto ospf metric 20",
      "10.200.200.2 nexthop  encap mpls  17100 via 192.168.5.13 dev eth1 weight 1 nexthop  encap mpls  17100 via 192.168.6.14 dev eth2 weight 1",
      "10.200.200.3 via 192.168.5.13 dev eth1" ,
      "10.200.200.4 via 192.168.6.14 dev eth2" ,
      "192.168.1.0/24 nexthop via 192.168.6.14 dev eth2 weight 1 nexthop via 192.168.5.13 dev eth1 weight 1",
      "192.168.2.0/24 via 192.168.5.13 dev eth1" ,
      "192.168.3.0/24 via 192.168.5.13 dev eth1" ,
      "192.168.4.0/24 via 192.168.6.14 dev eth2" ,
      "192.168.7.0/24 nexthop via 192.168.6.14 dev eth2 weight 1 nexthop via 192.168.8.16 dev eth3 weight 1",
    ],
    "Z": [
      "10.200.200.1 nexthop  encap mpls  17100 via 192.168.8.15 dev eth2 weight 1 nexthop  encap mpls  17100 via 192.168.7.14 dev eth1 weight 1",
      "10.200.200.2 encap mpls  17100 via 192.168.7.14 dev eth1",
      "10.200.200.3 encap mpls  17100 via 192.168.8.15 dev eth2",
      "10.200.200.4 via 192.168.7.14 dev eth1",
      "10.200.200.5 via 192.168.8.15 dev eth2",
      "192.168.1.0/24 via 192.168.7.14 dev eth1",
      "192.168.2.0/24 via 192.168.8.15 dev eth2",
      "192.168.3.0/24 nexthop via 192.168.8.15 dev eth2 weight 1 nexthop via 192.168.7.14 dev eth1 weight 1",
      "192.168.4.0/24 via 192.168.7.14 dev eth1",
      "192.168.5.0/24 via 192.168.8.15 dev eth2",
      "192.168.6.0/24 nexthop via 192.168.8.15 dev eth2 weight 1 nexthop via 192.168.7.14 dev eth1 weight 1",
    ]
}


  enabled_igp = ENV['ENABLED_IGP']
  enabled_igp = "" if enabled_igp == nil

  VM_NETWORK_CONFIG.each_with_index do |(machine_id, network_config), index|
    config.vm.define "timfa-test-machine-#{machine_id}" do |machine|
      machine.vm.hostname = "timfa-test-machine-#{machine_id}"

      network_config.each do |network_name, ip_address_suffix|
        machine.vm.network "private_network",
          ip: "#{PRIVATE_NETWORK_PREFIX}.#{ip_address_suffix}",
          virtualbox__intnet: "#{network_name}"
      end

      machine.vm.provision :ansible do |ansible|
        ansible.extra_vars = {
          loopback_ipv4_address: "10.200.200.#{index + 1}",
          enable_isis: enabled_igp.downcase == "isis",
          enable_ospf: enabled_igp.downcase == "ospf"
        }
        ansible.verbose = "v"
        ansible.playbook = "common.yml"
      end

      if enabled_igp != ""
        for static_route in STATIC_ROUTES[machine_id]
          machine.vm.provision "shell", inline: "sudo ip route add #{static_route}"
        end
      end
    end
  end
end
