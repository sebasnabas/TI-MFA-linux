---
# vim: ft=yaml.ansible
- hosts: all
  become: true
  become_method: sudo
  gather_facts: true
  tasks:
    - name: Stop and disable unattended-upgrades
      # It holds /var/lib/dpkg/lock-frontend
      # which prevents this script from installing packages sometimes
      ansible.builtin.service:
        name: unattended-upgrades
        enabled: false
        state: stopped

    - name: Update cache
      ansible.builtin.apt:
        update_cache: true

    - name: Install necessary packages
      ansible.builtin.apt:
        pkg:
          - "linux-headers-{{ ansible_facts['kernel'] }}"
          - cmake
          - gcc
          - gpg
          - iproute2
          - tcpdump

    - name: Configure ip forwarding
      ansible.posix.sysctl:
        name: "{{ item }}"
        value: 1
        state: present
        sysctl_set: true
        reload: true
      loop:
        - net.ipv4.conf.all.forwarding
        - net.ipv6.conf.all.forwarding

    - name: Load mpls modules
      community.general.modprobe:
        name: "{{ item }}"
        state: present
      loop:
        - mpls_router
        - mpls_iptunnel

    - name: Add loopback interface
      ansible.builtin.shell:
        cmd: ip addr add "{{ loopback_ipv4_address }}" dev lo
      when: ansible_lo.ipv4_secondaries is undefined

    - name: Configure mpls forwarding
      ansible.posix.sysctl:
        name: "net.mpls.conf.{{ item }}.input"
        value: 1
        state: present
        sysctl_set: true
        reload: true
      loop: "{{ ansible_interfaces }}"

    - name: Configure mpls label stack
      ansible.posix.sysctl:
        name: net.mpls.platform_labels
        value: 100000
        state: present
        sysctl_set: true
        reload: true

    - name: Configure arp_announce
      ansible.posix.sysctl:
        name: "net.ipv4.conf.{{ item }}.arp_announce"
        value: 2
        state: present
        sysctl_set: true
        reload: true
      loop: "{{ ansible_interfaces | reject('equalto', 'lo') | list  + ['default'] }}"

    - name: Configure arp_notify
      ansible.posix.sysctl:
        name: "net.ipv4.conf.{{ item }}.arp_notify"
        value: 1
        state: present
        sysctl_set: true
        reload: true
      loop: "{{ ansible_interfaces | reject('equalto', 'lo') | list  + ['default'] }}"
