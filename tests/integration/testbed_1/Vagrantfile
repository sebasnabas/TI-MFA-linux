Vagrant.configure("2") do |config|
  # ssh configuration
  config.ssh.username = "vagrant"

  config.ssh.keep_alive = true

  # config.vm.box = "debian/bullseye64"
  config.vm.box = "debian_frr_linux_5.16"
  config.vm.provider "virtualbox" do |virtualbox|
    virtualbox.memory = "512"
    virtualbox.cpus = "1"
  end

  config.vm.provision "shell", inline: "apt-get install --yes python3-apt"
  config.vm.synced_folder "../../../src", "/home/vagrant/ti-mfa-src"

  # Network topology
  # see https://www.univie.ac.at/ct/stefan/gi18.pdf figure 1
  #
  #                                           Router 1
  #                                         10.200.200.1
  #                                           +-------+
  #                                    [eth1] |       | [eth3]
  #      +------------------------------------|   t   |------------------------------------+
  #  e_l |                      192.168.12.11 |       | 192.168.14.11                      |
  #      |                                    +-------+                                e_r |
  #      |                          192.168.13.11 | [eth2]                                 |
  #      |                                    e_m |                                        |
  #      |                                        |                                        |
  #      |                                        |                                        |
  #      |                                        |                                        |
  #      | [eth1]                                 | [eth2]                          [eth2] |
  #      | 192.168.12.12                          | 192.168.13.13            192.168.14.14 |
  #  +-------+                                +-------+                                +-------+
  #  |       | [eth2]     l-to-m       [eth1] |       | [eth3]     m-to-r       [eth1] |       |
  #  |  v_l  |--------------------------------|  v_m  |--------------------------------|  v_r  |
  #  |       | 192.168.23.12    192.168.23.13 |       | 192.168.34.13    192.168.34.14 |       |
  #  +-------+                                +-------+                                +-------+
  #  10.200.200.2                            10.200.200.3                             10.200.200.4
  #  Router 2                                 Router 3                                 Router 4

  PRIVATE_NETWORK_PREFIX = "192.168"
  VM_NETWORK_CONFIG = {
    "t": {
      "e_l": "12.11",
      "e_m": "13.11",
      "e_r": "14.11"
    },
    "v-l": {
      "e_l": "12.12",
      "l-to-m": "23.12"
    },
    "v-m": {
      "l-to-m": "23.13",
      "e_m": "13.13",
      "m-to-r": "34.13"
    },
    "v-r": {
      "m-to-r": "34.14",
      "e_r": "14.14"
    }
  }

  enabled_igp = ENV['ENABLED_IGP']

  enabled_igp = "" if enabled_igp == nil

  VM_NETWORK_CONFIG.each_with_index do |(machine_id, network_config), index|
    config.vm.define "#{machine_id}" do |machine|
      machine.vm.hostname = "#{machine_id}"

      network_config.each do |network_name, ip_address_suffix|
        machine.vm.network "private_network",
          ip: "#{PRIVATE_NETWORK_PREFIX}.#{ip_address_suffix}",
          virtualbox__intnet: "#{network_name}"
      end

      machine.vm.provision :ansible do |ansible|
        ansible.extra_vars = {
          loopback_ipv4_address: "10.200.200.#{index + 1}",
          enable_isis: enabled_igp.downcase == "isis",
          enable_ospf: enabled_igp.downcase == "ospf"
        }
        ansible.verbose = "v"
        ansible.playbook = "common.yml"
      end
    end
  end

  # ROUTES:
  ### t
  # 10.0.2.0/24 dev eth0 proto kernel scope link src 10.0.2.15
  # 10.200.200.2 nhid 54 via 192.168.12.12 dev eth1 proto ospf metric 20
  # 10.200.200.3 nhid 55 via 192.168.13.13 dev eth2 proto ospf metric 20
  # 10.200.200.4 nhid 57 via 192.168.14.14 dev eth3 proto ospf metric 20
  # 192.168.12.0/24 dev eth1 proto kernel scope link src 192.168.12.11
  # 192.168.13.0/24 dev eth2 proto kernel scope link src 192.168.13.11
  # 192.168.14.0/24 dev eth3 proto kernel scope link src 192.168.14.11
  # 192.168.23.0/24 nhid 41 proto ospf metric 20
  #   nexthop via 192.168.12.12 dev eth1 weight 1
  #   nexthop via 192.168.13.13 dev eth2 weight 1
  # 192.168.34.0/24 nhid 58 proto ospf metric 20
  #   nexthop via 192.168.13.13 dev eth2 weight 1
  #   nexthop via 192.168.14.14 dev eth3 weight 1
  #
  ### v_l
  # 10.0.2.0/24 dev eth0 proto kernel scope link src 10.0.2.15
  # 10.200.200.1 nhid 55 via 192.168.12.11 dev eth1 proto ospf metric 20
  # 10.200.200.3 nhid 51 via 192.168.23.13 dev eth2 proto ospf metric 20
  # 10.200.200.4 nhid 56 proto ospf metric 20
  #   nexthop  encap mpls  17100 via 192.168.23.13 dev eth2 weight 1
  #   nexthop  encap mpls  17100 via 192.168.12.11 dev eth1 weight 1
  # 192.168.12.0/24 dev eth1 proto kernel scope link src 192.168.12.12
  # 192.168.13.0/24 nhid 37 proto ospf metric 20
  #   nexthop via 192.168.12.11 dev eth1 weight 1
  #   nexthop via 192.168.23.13 dev eth2 weight 1
  # 192.168.14.0/24 nhid 28 via 192.168.12.11 dev eth1 proto ospf metric 20
  # 192.168.23.0/24 dev eth2 proto kernel scope link src 192.168.23.12
  # 192.168.34.0/24 nhid 38 via 192.168.23.13 dev eth2 proto ospf metric 20
  #
  ### v_m
  # 10.0.2.0/24 dev eth0 proto kernel scope link src 10.0.2.15
  # 10.200.200.1 nhid 66 via 192.168.13.11 dev eth2 proto ospf metric 20
  # 10.200.200.2 nhid 64 via 192.168.23.12 dev eth1 proto ospf metric 20
  # 10.200.200.4 nhid 65 via 192.168.34.14 dev eth3 proto ospf metric 20
  # 192.168.12.0/24 nhid 43 proto ospf metric 20
  #   nexthop via 192.168.23.12 dev eth1 weight 1
  #   nexthop via 192.168.13.11 dev eth2 weight 1
  # 192.168.13.0/24 dev eth2 proto kernel scope link src 192.168.13.13
  # 192.168.14.0/24 nhid 56 proto ospf metric 20
  #   nexthop via 192.168.13.11 dev eth2 weight 1
  #   nexthop via 192.168.34.14 dev eth3 weight 1
  # 192.168.23.0/24 dev eth1 proto kernel scope link src 192.168.23.13
  # 192.168.34.0/24 dev eth3 proto kernel scope link src 192.168.34.13
  #
  ### v_r
  # sudo ip route add 10.200.200.2 nexthop  encap mpls  17100 via 192.168.34.13 dev eth1 weight 1 nexthop  encap mpls  17100 via 192.168.14.11 dev eth2 weight 1
  # 10.0.2.0/24 dev eth0 proto kernel scope link src 10.0.2.15
  # 10.200.200.1 nhid 39 via 192.168.14.11 dev eth2 proto ospf metric 20
  # 10.200.200.2 nhid 40 proto ospf metric 20
  #   nexthop  encap mpls  17100 via 192.168.34.13 dev eth1 weight 1
  #   nexthop  encap mpls  17100 via 192.168.14.11 dev eth2 weight 1
  # 10.200.200.3 nhid 37 via 192.168.34.13 dev eth1 proto ospf metric 20
  # 192.168.12.0/24 nhid 42 via 192.168.14.11 dev eth2 proto ospf metric 20
  # 192.168.13.0/24 nhid 43 proto ospf metric 20
  #   nexthop via 192.168.34.13 dev eth1 weight 1
  #   nexthop via 192.168.14.11 dev eth2 weight 1
  # 192.168.14.0/24 dev eth2 proto kernel scope link src 192.168.14.14
  # 192.168.23.0/24 nhid 30 via 192.168.34.13 dev eth1 proto ospf metric 20
  # 192.168.34.0/24 dev eth1 proto kernel scope link src 192.168.34.14
end
